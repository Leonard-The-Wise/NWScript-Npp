/** @file xmlgenstring.h
 * Define some XML headers and comments for file generation.
 *
 **/
 // Copyright (C) 2022 - Leonardo Silva 
 // The License.txt file describes the conditions under which this software may be distributed.

#pragma once


// Some comments for the XML auto-generation features
#define XMLDOCHEADER R"(
This XML document was generated by 'NWScript Tools Plugin for Notepad++', please avoid manually editing it.

Plugin Homepage: https://github.com/Leonard-The-Wise/NWScript-Npp

Copyright (C) 2022 - Leonardo Silva
The License.txt file on the plugin homepage describes the conditions under which this software may be distributed.

)"

#define XMLAUTOCLANGCOMMENT R"(  The language Attribute here doesn't really do anything, it's more of a comment.  )"

#define XMLAUTOCENVCOMMENT R"(
		Environment specifies how the language should be interpreted. ignoreCase makes autocomplete
		ignore any casing, start and stopFunc specify what chars a function starts and stops with.
		param specifies parameter separator and terminal can be used to specify a character that stops
		any function. Using the same character for different functions results in undefined behaviour.
		
		The basic word character are : A-Z a-z 0-9 and '_' 
		If your function name contains other characters,
		add your characters in "additionalWordChar" attribute (without separator)
		in order to make calltip hint work.  )"

#define XMLAUTOCSORTNOTICE R"(
		The following items should be alphabetically ordered.
		func="yes" means the keyword should be treated as a fuction, and thus can be used in the parameter
		calltip system. If this is the case, the retVal attribute specifies the return value/type. Any
		following Param tag specifies a parameter, they must be in order. The name attributes specifies
		the parameter name.  )"

#define XMLPLUGINLANGUAGECOMMENT R"(
		The Language subsection defines which languages are supported by a Plugin. The name attribute is the
		name of the language (instead of the name of the plugin), ext is the associated file extension(s)
		for that language, commentLine defines which tokens mark a single comment, commentStart and commentEnd 
		are used to define which tokens mark the start and the end of multilined comments respectively. )"

#define XMLPLUGINKEYWORDCOMMENT R"(
			The Keywords tags defines which keywords are supported by the language lexer and should be colorized. 
			Notepad++ supports up to 8 keyword classes (or elements) definitions. Here we're setting all 8 classes 
			to use with NWScript language - defined under the <Keywords name=""> attribute. These tags aren't mean
			to be edited manually, use the Plugin import functions for user-defined types instead.
				1) instre1 -> reserved for storing all basic language Instruction Set;
				2) type1   -> reserved for storing all basic script variable names;
				3) type2   -> reserved for storing all engine structures defined in nwscript.nss file;
				4) type3   -> reserved for storing the exclusive markup of the "object" class and derivates (OBJECT_SELF and OBJECT_INVALID);
				5) type4   -> reserved for storing all constant names defined in nwscript.nss file;
				6) type5   -> open for user-defined constants (edit it in Settings -> Style Configurator, or import via the Tools);
				7) type6   -> reserved for storing all engine functions defined in nwscript.nss file;
				8) type7   -> open for user-defined function definitions (edit it in Settings -> Style Configurator, or import via the Tools);  )"

#define XMLPLUGINLEXERTYPECOMMENT R"(
		The LexerType section links a set of color styles to the above Language. So both name attribute of Language and LexerType 
		must match. The desc here is what Notepad++ shows for the user when he is editing language colors on the Settings panel. 
		Ext is currently unused by Notepad++ and most languages just set it to empty.  )"

#define XMLPLUGINWORDSTYLECOMMENT R"(
			The WordStyle tags describe how to colorize each type of language token. Here, all WordStyles which have a 
			<WordStyle keywordClass=""> attribute must match with a respective language <Keyword name="">. All other unassociated 
			tags are treated internally by the language lexer, such as Preprocessor Directives, Default colors, Numbers, Strings, 
			Operators and Comments.
			The name is what Notepad++ displays to the user in the Settings -> Style Configurator box.
			The styleID attribute is an internal number the lexer software uses to associate classes and should NEVER be changed.  )"


