################################################################################################
#
#    Regular expression definitions for NWScript file parsing.
#    Copyright (C) 2022 - Leonardo Silva
#    
#    The License.txt file describes the conditions under which this software may be distributed.
#    Built and tested with: https://regex101.com/
#
################################################################################################

Usage:
- Paste the REGEX DEFINITIONS in your parser before pasting the actual Regex, or else the function
  will break.

==================================================================================================

NEW Functions are a more robust version of the regular expressions. They can handle object nesting,
inline comments and will assure function parameters integrity.

=================
NEW Functions
=================

A) REGEX DEFINITIONS
---------------------------------------------------------------------------

1) Version of definitions WITHOUT support for inline comments (NEW) - IN USE

(?(DEFINE)(?<word>[\w\d.\-]++)(?<string>"(?>\\.|[^"\\]*+)*+")(?<token>\g<word>|\g<string>)(?<tokenVector>\[\s*+(?>\g<validValue>(?=\])|\g<validValue>,(?=\g<validValue>))*+\])(?<object>\{\s*+(?>\g<validValue>(?=\})|\g<validValue>,(?=\g<validValue>))*+\})(?<validValue>\s*+(?>\g<token>|\g<tokenVector>|\g<object>)\s*+)(?'param'\s*+(?>const)?\s*+(?#paramType)\w+\s*+(?#paramName)\w+\s*+(?>=\s*+(?#paramDefaultValue)\g<validValue>)?\s*+)(?<fnContents>{(?:[^{"}]*+|\g<string>|\g<fnContents>)*}))

2) Version of definitions WITH support for inline comments (OLD)

(?(DEFINE)(?'commentLine'\/\/.*+)(?'comment'\/\*(?>\*\/|(?>(?>.|\n)(?!\*\/))*+)(?>(?>.|\n)(?=\*\/)\*\/)?)(?'cnotnull'(?>\s*+\g<commentLine>\s*+|\s*+\g<comment>\s*+)++)(?'c'\s*+|\g<cnotnull>)(?<word>[\w\d.\-]++)(?<string>"(?>\\.|[^"\\]*+)*+")(?<token>\g<word>|\g<string>)(?<tokenVector>\[\g<c>(?>\g<validValue>(?=\])|\g<validValue>,(?=\g<validValue>))*+\])(?<object>\{\g<c>(?>\g<validValue>(?=\})|\g<validValue>,(?=\g<validValue>))*+\})(?<validValue>\g<c>(?>\g<token>|\g<tokenVector>|\g<object>)\g<c>)(?'param'\g<c>(?>const)?\g<c>(?#paramType)\w+\g<c>(?#paramName)\w+\g<c>(?>=\g<c>(?#paramDefaultValue)\g<validValue>)?\g<c>)(?<fnContents>{(?:[^{"}]*+|\g<string>|\g<fnContents>)*}))

B) COMMENTS
---------------------------------------------------------------------------

1) Select comments - used to strip file from comments first - even malformed multilined ones. - IN USE - fast
(?(DEFINE)(?'commentLine'\/\/.*+)(?'comment'\/\*(?>\*\/|(?>(?>.|\n)(?!\*\/))*+)(?>(?>.|\n)(?=\*\/)\*\/)?)(?'cnotnull'(?>\g<commentLine>|\g<comment>)++)(?'c'\g<cnotnull>?))\g<cnotnull>

C) ENGINE STRUCTURES
---------------------------------------------------------------------------
1) Capture Engine Structures - IN USE - fast
^\s*+\K(?>#define)\s++(?>ENGINE_STRUCTURE_\d++)\s++(?<name>\w++)


D) FUNCTION DECLARATION
---------------------------------------------------------------------------
1) These don't support scoping

1.1) Version WITHOUT inline comments (NEW) - IN USE - fast
^\s*+\K(?<type>\w+)\s*+(?<name>\w+)\s*+\((?<parametersString>(?>\g<param>(?=\))|\g<param>,(?=\g<param>))*+)\)\s*+;

1.2) Version WITH inline comments (OLD) - slow
^\g<comment>*+\K(?<type>(?>\w+))\g<c>(?<name>(?>\w+))\g<c>\((?<parametersString>(?>\g<param>(?=\))|\g<param>,(?=\g<param>))*+)\)\g<c>;

2) This one support scoping

2.1) Version WITH inline comments and without anchor (OLD) - slowest
\g<c>*+^\g<comment>*+\K(?<type>(?>\w+))\g<c>(?<name>(?>\w+))\g<c>\((?<parametersString>(?>\g<param>(?=\))|\g<param>,(?=\g<param>))*+)\)\g<c>;

D.1) FUNCTION DEFINITIONS
---------------------------------------------------------------------------

1) Whole function definition contents - for stripping from file before parsing.
^\s*+\K((?>\w+)\s*+(?>\w+)\s*+\((?>(?>\g<param>,(?=\g<param>)|\g<param>(?=\))))*+\)\s*+\g<fnContents>)

2) Function Definitions separated into parts
^\s*+\K(?<type>(?>\w+))\s*+(?<name>(?>\w+))\s*+\((?<parametersString>(?>(?>\g<param>,(?=\g<param>)|\g<param>(?=\))))*+)\)\s*+(?<functionContents>\g<fnContents>)


E) FUNCTION PARAMETERS (FOR PARSING <parametersString>)
---------------------------------------------------------------------------

1) Version WITHOUT inline comments (NEW) - IN USE - fast
\s*+(?>const)?\s*+(?'type'\w+)\s*+(?'name'\w+)\s*+(?>=\s*+(?'defaultValue'\g<validValue>))?\s*+,?

2) Version WITH inline comments (OLD) - slow
\g<c>(?>const)?\g<c>(?'type'\w+)\g<c>(?'name'\w+)\g<c>(?>=\g<c>(?'defaultValue'\g<validValue>))?\g<c>,?


F) CONSTANTS
---------------------------------------------------------------------------
1) These don't support scoping

1.2) Version WITHOUT inline comments (NEW) - IN USE - fast
^\s*+(?>const)?\s*+\K(?<type>\w+)\s*+(?<name>\w+)\s*+=\s*+(?<value>\g<validValue>)\s*+;

1.1) Version WITH inline comments (OLD) - slow
^\g<c>*+(?>const)?\g<c>\K(?<type>\w+)\g<c>(?<name>\w+)\g<c>=\g<c>(?<value>\g<validValue>)\g<c>;

2) This one support scoping

2.1) Version WITH inline comments and without anchor (OLD) - slowest
\g<c>*+(?>const)?\g<c>\K(?<type>\w+)\g<c>(?<name>\w+)\g<c>=\g<c>(?<value>\g<validValue>)\g<c>;


================
:: END OF FILE
================